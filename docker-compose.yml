services:
  auth-service:
    container_name: auth-service
    build: ./services/auth-service
    ports:
      - "3001:3000"
    volumes:
      - ./services/auth-service/data:/app/data
    env_file:
      - ./.env
    environment:
      - DB_PATH=${AUTH_DB_PATH}
      - MAIL_USER=${AUTH_MAIL_USER}
      - MAIL_PASS=${AUTH_MAIL_PASS}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend
      - monitoring

  match-service:
    container_name: match-service
    build: ./services/match-service
    ports:
      - "3002:3000"
    volumes:
      - ./services/match-service/data:/app/data
    env_file:
      - ./.env
    environment:
      - DB_PATH=${MATCH_DB_PATH}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend
      - monitoring

  user-service:
    container_name: user-service
    build: ./services/user-service
    ports:
      - "3003:3000"
    env_file:
      - ./.env
    environment:
      - DB_PATH=${USER_DB_PATH}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ./services/user-service/data:/app/data
      - ./services/user-service/uploads:/app/uploads
    networks:
      - backend
      - monitoring

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    container_name: elk_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      #TODO descomentar quando necessário
      - indices.lifecycle.poll_interval=1m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
      #TODO descomentar quando necessário
      - ./elk-config/elasticsearch:/usr/share/elasticsearch/config/scripts:ro
    mem_limit: 1g
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - backend
      - monitoring
    
  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.2
    container_name: elk_kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - "xpack.encryptedSavedObjects.encryptionKey=a-very-long-random-key-for-encrypting-saved-objects-that-must-be-32-chars-long"
      - "xpack.security.encryptionKey=a-very-long-random-key-for-security-that-must-be-32-chars-long-here"
      - "xpack.reporting.encryptionKey=a-very-long-random-key-for-reporting-that-must-be-32-chars-long"
      - "xpack.security.enabled=false"
      - "xpack.monitoring.ui.container.elasticsearch.enabled=true"
      - "xpack.reporting.kibanaServer.hostname=localhost"
      - "server.host=0.0.0.0"
      - "server.shutdownTimeout=5s"
    ports:
      - "5601:5601"
    volumes:
      - kibana_data:/usr/share/kibana/data
    depends_on:
      elasticsearch:
        condition: service_healthy
    mem_limit: 512m
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    networks:
      - backend
      - monitoring

  logstash:
    image: docker.elastic.co/logstash/logstash:8.6.2
    container_name: elk_logstash
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
    ports:
      - "12201:12201/udp"
    volumes:
      - ./services/logs-service/pipeline:/usr/share/logstash/pipeline:ro
    depends_on:
      elasticsearch:
        condition: service_healthy
    mem_limit: 512m
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9600/_node/stats || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - backend
      - monitoring

volumes:
  esdata:
  kibana_data:

networks:
  backend:
    name: backend
  monitoring:
    name: monitoring