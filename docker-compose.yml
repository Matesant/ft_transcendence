services:
  auth-service:
    container_name: auth-service
    build: ./services/auth-service
    ports:
      - "3001:3000"
    volumes:
      - ./services/auth-service/data:/app/data
    env_file:
      - ./services/auth-service/.env
    depends_on:
      - logstash
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backend
      - monitoring

  match-service:
    container_name: match-service
    build: ./services/match-service
    ports:
      - "3002:3000"
    volumes:
      - ./services/match-service/data:/app/data
    env_file:
      - ./services/match-service/.env
    depends_on:
      - logstash
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backend
      - monitoring
  user-service:
    container_name: user-service
    build: ./services/user-service
    ports:
      - "3003:3000"
    env_file:
      - ./services/user-service/.env
    volumes:
      - ./services/user-service/data:/app/data
      - ./services/user-service/uploads:/app/uploads
    depends_on:
      - logstash
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backend
      - monitoring

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    container_name: elk_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false   # desliga autenticação para facilitar o teste
    ports:
      - "9200:9200"                   # API REST do Elasticsearch
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - backend
      - monitoring
    
  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.2
    container_name: elk_kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"                   # interface web do Kibana
    depends_on:
      - elasticsearch
    networks:
      - backend
      - monitoring
  logstash:
    image: docker.elastic.co/logstash/logstash:8.6.2
    container_name: elk_logstash
    ports:
      - "12201:12201/udp"    # GELF input for Docker
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    depends_on:
      - elasticsearch
    networks:
      - backend
      - monitoring

volumes:
  esdata:

networks:
  backend:
    name: backend
  monitoring:
    name: monitoring