services:
  auth-service:
    container_name: auth-service
    build: ./services/auth-service
    ports:
      - "3001:3000"
    volumes:
      - ./services/auth-service/data:/app/data
    env_file:
      - ./.env
    environment:
      - DB_PATH=${AUTH_DB_PATH}
      - MAIL_USER=${AUTH_MAIL_USER}
      - MAIL_PASS=${AUTH_MAIL_PASS}
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
    depends_on:
      - logstash
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://127.0.0.1:12201"
        tag: "auth-service"
    networks:
      - backend

  match-service:
    container_name: match-service
    build: ./services/match-service
    ports:
      - "3002:3000"
    volumes:
      - ./services/match-service/data:/app/data
    env_file:
      - ./.env
    environment:
      - DB_PATH=${MATCH_DB_PATH}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - logstash
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://127.0.0.1:12201"
        tag: "match-service"
    networks:
      - backend

  user-service:
    container_name: user-service
    build: ./services/user-service
    ports:
      - "3003:3000"
    env_file:
      - ./.env
    environment:
      - DB_PATH=${USER_DB_PATH}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ./services/user-service/data:/app/data
      - ./services/user-service/uploads:/app/uploads
    depends_on:
      - logstash
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://127.0.0.1:12201"
        tag: "user-service"
    networks:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    container_name: elk_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" 
    ports:
      - "9200:9200"                  
    volumes:
      - esdata:/usr/share/elasticsearch/data
    mem_limit: 1g                   
    networks:
      - backend
    
  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.2
    container_name: elk_kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    mem_limit: 512m
    networks:
      - backend
    environment:
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      SERVER_HOST: "0.0.0.0"
      XPACK_SECURITY_ENABLED: "false"
      XPACK_ENCRYPTED_SAVED_OBJECTS_ENCRYPTIONKEY: "a-very-long-random-key-for-encrypting-saved-objects-32-chars"
      XPACK_REPORTING_ROLES_ENABLED: "false"
      XPACK_REPORTING_KIBANASERVER_HOSTNAME: "localhost"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/"]
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:8.6.2
    container_name: elk_logstash
    hostname: logstash
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
      - pipeline.batch.size=250
      - pipeline.batch.delay=25
    ports:
      - "12201:12201/udp"   
    volumes:
      - ./services/logs-service/pipeline:/usr/share/logstash/pipeline:ro
    depends_on:
      - elasticsearch
    mem_limit: 512m                   
    networks:
      - backend

volumes:
  esdata:

networks:
  backend:
    name: backend
    driver: bridge